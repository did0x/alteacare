{"version":3,"file":"static/js/688.ca548e70.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Home/index.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { get_data } from \"../../redux/actions/main\";\nimport \"./index.scss\"\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const [items, setItems] = useState([]);\n  const [hospital, setHospital] = useState([]);\n  const [specialization, setSpecialization] = useState([]);\n  const [hospitalSelected, setHospitalSelected] = useState(\"\");\n  const [specializationSelected, setSpecializationSelected] = useState(\"\");\n  const [doctorNameSubmitted, setDoctorNameSubmitted] = useState(\"\");\n\n  const { data } = useSelector(\n    (state) => ({\n        data: state.main.data,\n    }),\n    shallowEqual\n  );\n\n\tuseEffect(() => {\n\t\tdispatch(get_data());\n\t},[dispatch])\n\n  useEffect(() => {\n    let hospitalArr = [];\n    let specializationArr = [];\n    data.map((item)=> {\n      setItems(items => [...items, item]);\n      hospitalArr = [...hospitalArr, item.hospital[0].name];\n      specializationArr = [...specializationArr, item.overview];\n    })\n    setHospital(Array.from(new Set(hospitalArr)));\n    setSpecialization(Array.from(new Set(specializationArr)));\n  }, [data])\n\n  useEffect(() => {\n    let temp = [...data];\n    if (doctorNameSubmitted !== \"\") {\n      temp = temp.filter(item => item.name.toLowerCase().includes(doctorNameSubmitted));\n    }\n    setItems(temp);\n    if (hospitalSelected !== \"\")  {\n      temp = temp.filter(item => item.hospital[0].name === hospitalSelected);\n    }\n    setItems(temp);\n    if (specializationSelected !== \"\") {\n      temp = temp.filter(item => item.overview === specializationSelected)\n    } \n    setItems(temp)\n      \n\t},[doctorNameSubmitted, hospitalSelected, specializationSelected])\n  \n  const handleHopsital = (event) => {\n    setHospitalSelected(event.target.value);\n  }\n\n  const handleSpecialization = (event) => {\n    setSpecializationSelected(event.target.value);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      setDoctorNameSubmitted(event.target.value);\n    }\n  }\n    return (\n      <div className='home'>\n        <div className='home__container'>\n          <div className='home__container__header'>\n            <h1>Search Doctor, Make an Appointment</h1>\n            <span>Discover the best doctors, clinic, and hospital the city nearest to you.</span>\n          </div>\n          <div className=\"home__container__search\">\n            <input type=\"text\" name=\"keyword\" id=\"keyword\" placeholder=\"Keyword\" onKeyDown={handleKeyDown}/>\n            <select defaultValue={\"\"} onChange={handleHopsital}>\n              <option value={\"\"}>Semua Rumah Sakit</option>\n              { hospital && hospital.map((item) => (\n                <option key={item} value={item}>{item}</option>\n              ))}\n            </select>\n            <select defaultValue={\"\"} onChange={handleSpecialization}>\n              <option value={\"\"}>Semua Spesialisasi</option>\n              { specialization && specialization.map((item) => (\n                <option key={item} value={item}>{item}</option>\n              ))}\n            </select>\n          </div>\n          <div className='home__container__content'>\n            { items && items.map((item) => (\n              <div className=\"item\" key={item.doctor_id}>\n                <div className=\"item__container\">\n                  <div className=\"item__photo\">\n                    <img\n                      className=\"item__photo__img\"\n                      src={item.photo.url}\n                      alt=\"Item\"\n                    />\n                  </div>\n                  <div className=\"item__name\">\n                      {item.name}\n                  </div>\n                  <div className=\"item__detail\">\n                      {item.overview}\n                  </div>\n                </div>\n                <div className=\"item__info\">\n                  <div className=\"item__info__about\" dangerouslySetInnerHTML={{__html: item.about}}></div>\n                  <div className=\"item__info__work\">\n                    Bekerja di {item.hospital[0].name}\n                  </div>\n                  <div className=\"item__info__price\">\n                    {item.price.formatted}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Home;"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","iter","Symbol","iterator","TypeError","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","push","value","err","dispatch","useDispatch","useState","items","setItems","hospital","setHospital","specialization","setSpecialization","hospitalSelected","setHospitalSelected","specializationSelected","setSpecializationSelected","doctorNameSubmitted","setDoctorNameSubmitted","data","useSelector","state","main","shallowEqual","useEffect","get_data","hospitalArr","specializationArr","map","item","overview","Set","temp","filter","toLowerCase","includes","className","type","id","placeholder","onKeyDown","event","key","target","defaultValue","onChange","src","photo","url","alt","dangerouslySetInnerHTML","__html","about","price","formatted","doctor_id"],"sourceRoot":""}